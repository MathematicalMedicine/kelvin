struct swStopwatch *overallSW;
#include <signal.h>		/* Signalled dumps */
volatile sig_atomic_t signalSeen = 0;
int handlerDumpCycle = 0;
void usr1SignalHandler (int signal) {
  swLogPeaks ("Timer");
//  if ((++handlerDumpCycle % 100) == 0)
//    dumpPStats ("Timer");
}
void quitSignalHandler (int signal) {
  swDump (overallSW);
#ifdef DMTRACK
  char messageBuffer[MAXSWMSG];
  sprintf (messageBuffer,
	   "Count malloc:%d, free:%d, realloc OK:%d, realloc move:%d, realloc free:%d, max depth:%d, max recycles:%d",
	   countMalloc, countFree, countReallocOK, countReallocMove, countReallocFree, maxListDepth, maxRecycles);
  swLogMsg (messageBuffer);
  sprintf (messageBuffer,
	   "Size malloc:%g, free:%g, realloc OK:%g, realloc move:%g, realloc free:%g, current:%g, peak:%g",
	   totalMalloc, totalFree, totalReallocOK, totalReallocMove,
	   totalReallocFree, currentAlloc, peakAlloc);
  swLogMsg (messageBuffer);
#endif
}
