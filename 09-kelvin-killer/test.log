PID: 27398, kelvin V0.32.4, likelihood V0.32.4, locus V0.32.4, polynomial V0.0.32.4 starting run
To force a dump of stats, type CTRL-\ (dangerous and terse but always works)
or type "kill -10 27398" (safe and thorough, but requires program cooperation).
!!!!!!!!!!!The Computation is done in polynomial mode!!!!!!!!!!!!!!!
Dichotomous Trait & LE
Total number of markers in data: 6
Total number of trait locus in data: 1
Total number of families in pedigree file: 1
Number of loci to use for analysis: 3
holdAllPolys from further population of transmission matrix
Holding all current polynomials (via hashes):
378 constants
8 variables
16 sums
7 products
---
MP start time: 1.170000
PEDIGREE: 3011 (1/1)
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
(s40:0.25*p[2][0][0][0]+0.25*p[2][0][0][1])
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
(s40:0.5*(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+0.5*(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p17:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p18:(s1:-1*p[2][0][0][1]+1)^2*(s16:-0.25*p[2][0][1][1]+0.25)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
(s40:(p31:f[0][1]^2*(s2:-1*p[2][0][1][1]+1)^5*(s24:(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5)))*(s28:(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+2*(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)))+2*(p32:f[0][0]*f[0][1]*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s23:-0.5*p[2][0][1][1]+0.5)*(s38:0.5*(p28:(s2:-1*p[2][0][1][1]+1)^2*(s24:(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5)))*(s28:(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+2*(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)))+0.5*(p29:(s1:-1*p[2][0][0][1]+1)*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)*(s34:0.5*(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+0.5*(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)+0.5*(p25:f[0][1]^2*p[2][0][0][1]*p[2][0][1][1]*(s2:-1*p[2][0][1][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^4*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p26:f[0][0]*f[0][1]*p[2][0][0][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])*(s29:0.25*p[2][0][0][0]+0.5*p[2][0][0][1]+0.25*p[2][0][1][1])^4*(s30:-0.25*p[2][0][0][0]+-0.5*p[2][0][0][1]+-0.25*p[2][0][1][1]+1)^2)+0.5*(p27:f[0][0]^2*p[2][0][0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s32:0.5*p[2][0][0][0]+0.5*p[2][0][0][1])^4*(s33:-0.5*p[2][0][0][0]+-0.5*p[2][0][0][1]+1)^2))*(s35:0.5*(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+0.5*(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p17:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p18:(s1:-1*p[2][0][0][1]+1)^2*(s16:-0.25*p[2][0][1][1]+0.25)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))))))
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
(s40:(p35:f[0][1]^2*(s37:(p31:f[0][1]^2*(s2:-1*p[2][0][1][1]+1)^5*(s24:(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5)))*(s28:(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+2*(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)))+2*(p32:f[0][0]*f[0][1]*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s23:-0.5*p[2][0][1][1]+0.5)*(s36:0.5*(p28:(s2:-1*p[2][0][1][1]+1)^2*(s24:(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5)))*(s28:(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+2*(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)))+0.5*(p29:(s1:-1*p[2][0][0][1]+1)*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)*(s34:0.5*(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+0.5*(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)+0.5*(p25:f[0][1]^2*p[2][0][0][1]*p[2][0][1][1]*(s2:-1*p[2][0][1][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^4*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p26:f[0][0]*f[0][1]*p[2][0][0][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])*(s29:0.25*p[2][0][0][0]+0.5*p[2][0][0][1]+0.25*p[2][0][1][1])^4*(s30:-0.25*p[2][0][0][0]+-0.5*p[2][0][0][1]+-0.25*p[2][0][1][1]+1)^2)+0.5*(p27:f[0][0]^2*p[2][0][0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s32:0.5*p[2][0][0][0]+0.5*p[2][0][0][1])^4*(s33:-0.5*p[2][0][0][0]+-0.5*p[2][0][0][1]+1)^2))*(s35:0.5*(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+0.5*(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p17:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p18:(s1:-1*p[2][0][0][1]+1)^2*(s16:-0.25*p[2][0][1][1]+0.25)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))))))+(p36:f[0][0]*f[0][1]*(s39:(p33:f[0][1]^2*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s23:-0.5*p[2][0][1][1]+0.5)*(s36:0.5*(p28:(s2:-1*p[2][0][1][1]+1)^2*(s24:(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5)))*(s28:(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+2*(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)))+0.5*(p29:(s1:-1*p[2][0][0][1]+1)*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)*(s34:0.5*(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+0.5*(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)+0.5*(p25:f[0][1]^2*p[2][0][0][1]*p[2][0][1][1]*(s2:-1*p[2][0][1][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^4*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p26:f[0][0]*f[0][1]*p[2][0][0][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])*(s29:0.25*p[2][0][0][0]+0.5*p[2][0][0][1]+0.25*p[2][0][1][1])^4*(s30:-0.25*p[2][0][0][0]+-0.5*p[2][0][0][1]+-0.25*p[2][0][1][1]+1)^2)+0.5*(p27:f[0][0]^2*p[2][0][0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s32:0.5*p[2][0][0][0]+0.5*p[2][0][0][1])^4*(s33:-0.5*p[2][0][0][0]+-0.5*p[2][0][0][1]+1)^2))*(s35:0.5*(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+0.5*(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p17:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p18:(s1:-1*p[2][0][0][1]+1)^2*(s16:-0.25*p[2][0][1][1]+0.25)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))))+2*(p34:f[0][0]*f[0][1]*(s1:-1*p[2][0][0][1]+1)^2*(s16:-0.25*p[2][0][1][1]+0.25)*(s38:0.25*(p28:(s2:-1*p[2][0][1][1]+1)^2*(s24:(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5)))*(s28:(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+2*(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)))+0.5*(p29:(s1:-1*p[2][0][0][1]+1)*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)*(s34:0.5*(p22:f[0][1]^2*p[2][0][1][1]^6*(s2:-1*p[2][0][1][1]+1)^3)+(p23:f[0][0]*f[0][1]*p[2][0][1][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^5*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+0.5*(p24:f[0][0]^2*p[2][0][0][1]^5*p[2][0][1][1]*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2)+0.5*(p25:f[0][1]^2*p[2][0][0][1]*p[2][0][1][1]*(s2:-1*p[2][0][1][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^4*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+(p26:f[0][0]*f[0][1]*p[2][0][0][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])*(s29:0.25*p[2][0][0][0]+0.5*p[2][0][0][1]+0.25*p[2][0][1][1])^4*(s30:-0.25*p[2][0][0][0]+-0.5*p[2][0][0][1]+-0.25*p[2][0][1][1]+1)^2)+0.5*(p27:f[0][0]^2*p[2][0][0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s32:0.5*p[2][0][0][0]+0.5*p[2][0][0][1])^4*(s33:-0.5*p[2][0][0][0]+-0.5*p[2][0][0][1]+1)^2))*(s35:0.5*(p15:(s2:-1*p[2][0][1][1]+1)^3*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+0.5*(p16:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p17:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))*(s23:-0.5*p[2][0][1][1]+0.5))+0.5*(p18:(s1:-1*p[2][0][0][1]+1)^2*(s16:-0.25*p[2][0][1][1]+0.25)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))))+0.25*(p30:(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)*(s25:(p17:(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s21:(p10:(s2:-1*p[2][0][1][1]+1)*(s17:(p7:f[0][1]^4*(s2:-1*p[2][0][1][1]+1)^3)+4*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))*(s23:-0.5*p[2][0][1][1]+0.5))+(p18:(s1:-1*p[2][0][0][1]+1)^2*(s16:-0.25*p[2][0][1][1]+0.25)*(s22:(p11:(s1:-1*p[2][0][0][1]+1)*(s19:2*(p8:f[0][0]*f[0][1]^3*(s1:-1*p[2][0][0][1]+1)*(s2:-1*p[2][0][1][1]+1)*(s16:-0.25*p[2][0][1][1]+0.25))+4*(p9:f[0][0]^2*f[0][1]^2*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625))))+4*(p12:f[0][0]^2*f[0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s1:-1*p[2][0][0][1]+1)^2*(s18:-0.0625*p[2][0][1][1]+0.0625)))))*(s31:(p25:f[0][1]^2*p[2][0][0][1]*p[2][0][1][1]*(s2:-1*p[2][0][1][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])^4*(s27:-0.5*p[2][0][0][1]+-0.5*p[2][0][1][1]+1)^2)+2*(p26:f[0][0]*f[0][1]*p[2][0][0][1]*(s1:-1*p[2][0][0][1]+1)*(s26:0.5*p[2][0][0][1]+0.5*p[2][0][1][1])*(s29:0.25*p[2][0][0][0]+0.5*p[2][0][0][1]+0.25*p[2][0][1][1])^4*(s30:-0.25*p[2][0][0][0]+-0.5*p[2][0][0][1]+-0.25*p[2][0][1][1]+1)^2)+(p27:f[0][0]^2*p[2][0][0][1]^2*(s0:-1*p[2][0][0][0]+1)*(s32:0.5*p[2][0][0][0]+0.5*p[2][0][0][1])^4*(s33:-0.5*p[2][0][0][0]+-0.5*p[2][0][0][1]+1)^2))))))))
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
keepPoly for the likelihood and weight polynomials
freePolys after keeping the likelihood and weight polynomials
evil caller is trying to use a polynomial that was freed:
[FREED eType=2 id=526 index=40 key=-514095054 count=1 valid=0]
In expTermPrinting, unknown expression type 5, exiting
